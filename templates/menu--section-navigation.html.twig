{#
/**
 * @file
 * Theme override for "Section navigation" instance of "main" menu (usually
 * placed in sidebar_primary region) (named based on theme hook suggestion in
 * block config).
 *
 * ~ (ALMOST) A direct copy of @classy/navigation/menu.html.twig.
 *   See code comments below for related wonderings... (and maybe resolve the differences and update this code comment!)
 *
 * See @cwd_base/menu--main for available variables.
 */
#}
{% import _self as menus %}

{#
  We call a macro which calls itself to render the full tree.
  @see http://twig.sensiolabs.org/doc/tags/macro.html
#}
{# TO DO: what is this line is for? ðŸ‘‡ git says it's been here since the initial repo commit, so, idk, but it looks like an accident to me #}
{% set content_attributes = content_attributes.addClass(list_classes) %}
{{ menus.menu_links(items, attributes, 0) }}

{% macro menu_links(items, attributes, menu_level) %}
  {% import _self as menus %}
  {% if items %}
    {% if menu_level == 0 %}
      <ul class="menu">
        {# TO DO: why even have this conditional if the markup is the same either way?...
        ...FWIW, in @classy, the "if menu_level == 0" version looks like this, which also seems silly, right? --
        <ul{{ attributes.addClass('menu') }}> #}
    {% else %}
      <ul class="menu">
    {% endif %}
    {% for item in items %}
      {%
        set classes = [
          'menu-item',
          item.is_expanded ? 'menu-item--expanded',
          item.is_collapsed ? 'menu-item--collapsed',
          item.in_active_trail ? 'menu-item--active-trail',
        ]
      %}
      <li{{ item.attributes.addClass(classes) }}>
        {{ link(item.title, item.url) }}
        {% if item.below %}
          {{ menus.menu_links(item.below, attributes, menu_level + 1) }}
        {% endif %}
      </li>
    {% endfor %}
    </ul>
  {% endif %}
{% endmacro %}
